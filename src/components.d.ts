/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface NovaCascader {
    'content': cascader;
    'expandTrigger': string;
  }
  interface NovaCascaderItem {
    'data': cascaderItem[];
    'expandTrigger': string;
    'isVisible': boolean;
    'path': string[];
  }
}

declare global {


  interface HTMLNovaCascaderElement extends Components.NovaCascader, HTMLStencilElement {}
  var HTMLNovaCascaderElement: {
    prototype: HTMLNovaCascaderElement;
    new (): HTMLNovaCascaderElement;
  };

  interface HTMLNovaCascaderItemElement extends Components.NovaCascaderItem, HTMLStencilElement {}
  var HTMLNovaCascaderItemElement: {
    prototype: HTMLNovaCascaderItemElement;
    new (): HTMLNovaCascaderItemElement;
  };
  interface HTMLElementTagNameMap {
    'nova-cascader': HTMLNovaCascaderElement;
    'nova-cascader-item': HTMLNovaCascaderItemElement;
  }
}

declare namespace LocalJSX {
  interface NovaCascader extends JSXBase.HTMLAttributes<HTMLNovaCascaderElement> {
    'content'?: cascader;
    'expandTrigger'?: string;
  }
  interface NovaCascaderItem extends JSXBase.HTMLAttributes<HTMLNovaCascaderItemElement> {
    'data'?: cascaderItem[];
    'expandTrigger'?: string;
    'isVisible'?: boolean;
    'onClickItem'?: (event: CustomEvent<any>) => void;
    'path'?: string[];
  }

  interface IntrinsicElements {
    'nova-cascader': NovaCascader;
    'nova-cascader-item': NovaCascaderItem;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


